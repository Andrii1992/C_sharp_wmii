


Permutacje powyższego przykładu:
Pobierz pliki z rozszerzeniem .exe.
FileInfo[] subFiles = di.GetFiles("*.exe");
Pobieranie katalogów zawierających ciąg znaków test w dowolnym miejscu w nazwie.
DirectoryInfo[] subDirs = di.GetDirectories("*test*");
Poszukiwanie plików z rozszerzeniem exe rekursywnie w katalogu.
FileInfo[] subFiles = di.GetFiles("*.exe", SearchOption.AllDirectories);
Poszukiwanie plików z rozszerzeniem exe w aktualnym katalogu.
FileInfo[] subFiles = di.GetFiles("*.exe", SearchOption.TopDirectoryOnly);
Zagadnienie 4: Wykorzystanie protokołu TCP/IP
Inner Process Comunication to sposób na łączenie i komunikację dwóch lub więcej maszyn w celu
wymiany danych pomiędzy nimi. Zazwyczaj do tego celu wykorzystuje się protokół TCP/IP.
Poniżej przedstawiony jest kod pozwalający na sprawdzenie jaki numer IP posiada komputer.
string name = (args.Length < 1) ? Dns.GetHostName() : args[0];
try
{
IPAddress[] addrs = Dns.Resolve(name).AddressList;
foreach (IPAddress addr in addrs)
Console.WriteLine("{0}/{1}", name, addr);
} catch (
Exception e)
{
Console.WriteLine(e.Message);
}
Console.ReadLine();
Tworzenie aplikacji klienta:
try
{
TcpClient tcpclnt = new TcpClient();
Console.WriteLine("Connecting.....");
tcpclnt.Connect("127.0.0.1", 8001);
Console.WriteLine("Connected");
Console.Write("Enter the string to be transmitted : ");
String str = Console.ReadLine();
Stream stm = tcpclnt.GetStream();
ASCIIEncoding asen = new ASCIIEncoding();
byte[] ba = asen.GetBytes(str);
Console.WriteLine("Transmitting.....");
stm.Write(ba, 0, ba.Length);
byte[] bb = new byte[100];
int k = stm.Read(bb, 0, 100);
for (int i = 0; i < k; i++)
Console.Write(Convert.ToChar(bb[i]));
tcpclnt.Close();
} catch (
Exception e)
{
Console.WriteLine("Error..... " + e.StackTrace);
}
Console.ReadLine();
Tworzenie aplikacji serwera:
try
{
IPAddress ipAd = IPAddress.Parse("127.0.0.1");
TcpListener myList = new TcpListener(ipAd, 8001);
myList.Start();
Console.WriteLine("The server is running at port 8001...");
Console.WriteLine("The local End point is :" +
myList.LocalEndpoint);
Console.WriteLine("Waiting for a connection.....");
Socket s = myList.AcceptSocket();
Console.WriteLine("Connection accepted from " + s.RemoteEndPoint);
byte[] b = new byte[100];
int k = s.Receive(b);
Console.WriteLine("Recieved...");
for (int i = 0; i < k; i++)
Console.Write(Convert.ToChar(b[i]));
ASCIIEncoding asen = new ASCIIEncoding();
s.Send(asen.GetBytes("The string was recieved by the server."));
Console.WriteLine("\nSent Acknowledgement");
s.Close();
myList.Stop();
} catch (
Exception e)
{
Console.WriteLine("Error..... " + e.StackTrace);
}
Console.ReadLine();
